// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PBL3_DUTLibrary.Data;

#nullable disable

namespace PBL3_DUTLibrary.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250305021453_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PBL3_DUTLibrary.Models.AccessHistory", b =>
                {
                    b.Property<long>("AccessId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime");

                    b.HasKey("AccessId", "UserId")
                        .HasName("pk");

                    b.HasIndex("UserId");

                    b.ToTable("AccessHistory");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Book", b =>
                {
                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint")
                        .HasColumnName("amount");

                    b.Property<string>("Author")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("author");

                    b.Property<long?>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("available")
                        .HasDefaultValueSql("('1')");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("Title")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("title");

                    b.HasKey("BookId")
                        .HasName("pk_books");

                    b.ToTable("books");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.BookCopy", b =>
                {
                    b.Property<int>("BookCopyId")
                        .HasColumnType("int");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("BookCopyId", "BookId")
                        .HasName("pk3");

                    b.HasIndex("BookId");

                    b.ToTable("book_copy");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Borrow", b =>
                {
                    b.Property<int>("BorrowId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Dealine")
                        .HasColumnType("int")
                        .HasColumnName("dealine");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime");

                    b.HasKey("BorrowId", "UserId", "BookId")
                        .HasName("pk2");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrow");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Genre", b =>
                {
                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Genre1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("genre");

                    b.HasKey("BookId", "Genre1")
                        .HasName("pk4");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Loan", b =>
                {
                    b.Property<long>("LoanId")
                        .HasColumnType("bigint")
                        .HasColumnName("loan_id");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint")
                        .HasColumnName("price");

                    b.HasKey("LoanId")
                        .HasName("pk_loans");

                    b.ToTable("loans");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.WebUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("RealName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Sdt")
                        .HasColumnType("int")
                        .HasColumnName("sdt");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__WebUser__1788CC4CC2A485BA");

                    b.ToTable("WebUser");
                });

            modelBuilder.Entity("WishList", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "BookId")
                        .HasName("pk5");

                    b.HasIndex("BookId");

                    b.ToTable("WishList", (string)null);
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.AccessHistory", b =>
                {
                    b.HasOne("PBL3_DUTLibrary.Models.WebUser", "User")
                        .WithMany("AccessHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__AccessHis__UserI__5629CD9C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.BookCopy", b =>
                {
                    b.HasOne("PBL3_DUTLibrary.Models.Book", "Book")
                        .WithMany("BookCopies")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__book_copy__BookI__5CD6CB2B");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Borrow", b =>
                {
                    b.HasOne("PBL3_DUTLibrary.Models.Book", "Book")
                        .WithMany("Borrows")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Borrow__BookId__59FA5E80");

                    b.HasOne("PBL3_DUTLibrary.Models.WebUser", "User")
                        .WithMany("Borrows")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Borrow__UserId__59063A47");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Genre", b =>
                {
                    b.HasOne("PBL3_DUTLibrary.Models.Book", "Book")
                        .WithMany("Genres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__genre__BookId__5FB337D6");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("WishList", b =>
                {
                    b.HasOne("PBL3_DUTLibrary.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__WishList__BookId__71D1E811");

                    b.HasOne("PBL3_DUTLibrary.Models.WebUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__WishList__UserId__70DDC3D8");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.Book", b =>
                {
                    b.Navigation("BookCopies");

                    b.Navigation("Borrows");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("PBL3_DUTLibrary.Models.WebUser", b =>
                {
                    b.Navigation("AccessHistories");

                    b.Navigation("Borrows");
                });
#pragma warning restore 612, 618
        }
    }
}
