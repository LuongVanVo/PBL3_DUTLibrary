@using PBL3_DUTLibrary.Models;
@using PBL3_DUTLibrary.ViewModels;
@model UserProfileViewModel;
@{
    Layout = "_LayoutCustomer";
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" />


@await Html.PartialAsync("PersonalProfile")
<div class="mycontainer" id="section-borrowing" style="margin-top: 3rem !important;">
    <h2 class="display-4 fw-normal">Your Borrowing List</h2>
    <br />
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" class="col-title">Book Title</th>
                    <th scope="col" class="col-date">Borrowed Time</th>
                    <th scope="col" class="col-date">Deadline</th>
                    <th scope="col" class="col-status">Status</th>
                    <th scope="col" class="col-fee">Fee</th>
                    <th scope="col" class="col-action">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Borrowing)
                {
                    var start = item.Time.ToString("d/M/yyyy");
                    var end = item.Time.AddDays(item.Deadline).ToString("d/M/yyyy");
                    <tr>
                        <td class="col-title">
                            <a asp-action="DetailBooks" asp-controller="Books" asp-route-id="@item.Book.BookId">@item.Book.Title</a>
                        </td>
                        <td class="col-date">
                            @start
                        </td>
                        <td class="col-date">
                            @end
                        </td>
                        <td class="col-status">
                            @{
                                var status = item.Status == 0 ? "Not Received" : item.Status == 1 ? "Received" : "Overdue";
                            }
                            <span class="status-text @(item.Status == 2 ? "text-danger" : "")">@status</span>
                            @{
                                if (item.Status == 2)
                                {
                                    <i class="fa-solid fa-triangle-exclamation text-danger"></i>
                                }
                            }
                        </td>
                        <td class="col-fee">
                            @{
                                var fee = item.Fee == null ? 0 : item.Fee;
                                var feestring = string.Format("{0:N0}", fee);
                            }
                            @feestring
                        </td>
                        <td class="col-action text-center">
                            @{
                                if (item.ProlongRequests != null && item.ProlongRequests.Count > 0)
                                {
                                    <span class="badge bg-secondary">Request Sent</span>
                                }
                                else
                                {
                                    <button type="button"
                                            class="btn btn-warning send-request-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#requestModal"
                                            data-id="@item.BorrowId">
                                        Request
                                    </button>
                                }
                            }

                            <!-- Modal -->
                            <div class="modal fade" id="requestModal" tabindex="-1" aria-labelledby="requestModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="requestModalLabel">Send Request</h5>
                                            <i class="fa-solid fa-xmark btn-close" style="cursor: pointer;" aria-label="Close" data-bs-dismiss="modal"></i>
                                        </div>
                                        <div class="modal-body">
                                            <form id="requestForm" asp-action="sendRequest" asp-controller="Dashboard">
                                                <input type="hidden" class="form-control" id="id" name="id" value="@item.BorrowId" required>
                                                <div class="mb-3" style="text-align:left">
                                                    <label for="Days" class="form-label">Days want to prolong</label>
                                                    <input type="number" class="form-control" id="Days" name="Days" required>
                                                </div>
                                                <div class="mb-3" style="text-align:left">
                                                    <label for="Reason" class="form-label">Reason</label>
                                                    <textarea class="form-control" id="Reason" name="Reason" required></textarea>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-primary" onclick="sendRequest()">Send</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<br />

<div class="mycontainer" style="margin-bottom: 3rem !important;">
    <h2 class="display-4 fw-normal">Your Returned List</h2>
    <br />
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" class="col-title">Book Title</th>
                    <th scope="col" class="col-date">Borrowed Time</th>
                    <th scope="col" class="col-date">Deadline</th>
                    <th scope="col" class="col-fee">Fee</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Returned)
                {
                    var fee = item.Fee == null ? 0 : item.Fee;
                    var feestring = string.Format("{0:N0}", fee);
                    var start = item.Time.ToString("d/M/yyyy");
                    var end = item.Time.AddDays(item.Deadline).ToString("d/M/yyyy");
                    <tr>
                        <td class="col-title">
                            <a asp-action="DetailBooks" asp-controller="Books" asp-route-id="@item.Book.BookId">@item.Book.Title</a>
                        </td>
                        <td class="col-date">
                            @start
                        </td>
                        <td class="col-date">
                            @end
                        </td>
                        <td class="col-fee">
                            @feestring
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    .gradient-custom {
        /* fallback for old browsers */
        background: #f6d365;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1));
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1))
    }

    .nav-text {
        color: black;
    }

    .mainbody {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .mycontainer {
        background: white;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        width: 100%;
    }

    /* Responsive styles for the tables */
    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    /* Column width definitions */
    .col-title {
        min-width: 200px;
        max-width: 40%;
    }

    .col-date {
        min-width: 120px;
        width: 15%;
    }

    .col-status {
        min-width: 110px;
        width: 15%;
    }

    .col-fee {
        min-width: 80px;
        width: 10%;
    }

    .col-action {
        min-width: 100px;
        width: 10%;
    }

    /* Desktop styles */
    @@media (min-width: 1200px) {
        .col-title {
            min-width: 250px;
        }

        .col-date {
            min-width: 130px;
        }
    }

    /* Laptop styles */
    @@media (max-width: 1199px) and (min-width: 992px) {
        .col-title {
            min-width: 220px;
        }
    }

    /* Tablet styles */
    @@media (max-width: 991px) and (min-width: 768px) {
        .col-title {
            min-width: 180px;
        }

        .col-date {
            min-width: 100px;
        }

        .send-request-btn {
            padding: 0.3rem 0.6rem;
            font-size: 0.9rem;
        }
    }

    /* Mobile styles */
    @@media (max-width: 767px) {
        .mycontainer {
            padding: 10px;
            border-radius: 0;
            box-shadow: none;
        }

        .display-4 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .col-title {
            min-width: 150px;
        }

        .col-date {
            min-width: 90px;
        }

        .col-status {
            min-width: 100px;
        }

        .col-fee {
            min-width: 60px;
        }

        .send-request-btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.85rem;
        }

        .table {
            font-size: 0.9rem;
        }
    }

    /* Small mobile styles */
    @@media (max-width: 576px) {
        .mycontainer {
            padding: 5px;
        }

        .display-4 {
            font-size: 1.2rem;
        }

        .col-title {
            min-width: 120px;
        }

        .col-date {
            min-width: 80px;
        }

        .col-status {
            min-width: 90px;
        }

        .table {
            font-size: 0.8rem;
        }

        .send-request-btn {
            padding: 0.2rem 0.4rem;
            font-size: 0.8rem;
        }
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script>
    var requestModal = document.getElementById('requestModal');
    requestModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget; // Button that triggered the modal
        var id = button.getAttribute('data-id'); // Extract info from data-* attributes

        var input = requestModal.querySelector('#id'); // Fixed from emailModal to requestModal
        input.value = id;
    });
    function sendRequest() {
        var requestForm = document.getElementById("requestForm");
        requestForm.submit();
    }
</script>
